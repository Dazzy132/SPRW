# Generated by Django 4.1.7 on 2023-04-13 13:46

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужчина'), ('female', 'Женщина')], max_length=20, verbose_name='Гендер')),
                ('group', models.CharField(choices=[('user', 'Аутентифицированный пользователь'), ('moderator', 'Модератор'), ('admin', 'Администратор')], default='user', max_length=30, verbose_name='Группа')),
                ('username', models.CharField(db_index=True, help_text='help', max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(3), users.validators.validate_username], verbose_name='username')),
                ('email', models.EmailField(db_index=True, max_length=40, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[а-яА-Яa-zA-Z]+$', message='Имя может содержать только буквы')], verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, validators=[django.core.validators.RegexValidator('^[а-яА-Яa-zA-Z]+$', message='Фамилия может содержать только буквы')], verbose_name='last name')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{11}$', message='Номер телефона должен содержать ровно 11 цифр.')], verbose_name='Phone number')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото пользователя')),
                ('is_private', models.BooleanField(default=False, verbose_name='Закрыт ли профиль пользователя')),
                ('profile_status', models.CharField(blank=True, max_length=150, null=True, verbose_name='статус пользователя')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL, verbose_name='Профиль пользователя')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_of', to='users.profile', verbose_name='Друг профиля')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to='users.profile', verbose_name='Профиль пользователя')),
            ],
            options={
                'verbose_name': 'Друг',
                'verbose_name_plural': 'Друзья',
            },
        ),
    ]
